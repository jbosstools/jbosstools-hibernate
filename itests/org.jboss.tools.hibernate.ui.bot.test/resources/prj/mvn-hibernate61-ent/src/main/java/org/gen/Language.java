package org.gen;

// Generated Mar 5, 2015 8:03:38 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Language generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "LANGUAGE", schema = "PUBLIC", catalog = "SAKILA")
public class Language implements java.io.Serializable {

	private byte languageId;
	private String name;
	private Date lastUpdate;
	private Set<Film> filmsForOriginalLanguageId = new HashSet<Film>(0);
	private Set<Film> filmsForLanguageId = new HashSet<Film>(0);
	private Set<Film> filmsForLanguageId_1 = new HashSet<Film>(0);
	private Set<Film> filmsForOriginalLanguageId_1 = new HashSet<Film>(0);

	public Language() {
	}

	public Language(byte languageId, String name, Date lastUpdate) {
		this.languageId = languageId;
		this.name = name;
		this.lastUpdate = lastUpdate;
	}

	public Language(byte languageId, String name, Date lastUpdate,
			Set<Film> filmsForOriginalLanguageId, Set<Film> filmsForLanguageId,
			Set<Film> filmsForLanguageId_1,
			Set<Film> filmsForOriginalLanguageId_1) {
		this.languageId = languageId;
		this.name = name;
		this.lastUpdate = lastUpdate;
		this.filmsForOriginalLanguageId = filmsForOriginalLanguageId;
		this.filmsForLanguageId = filmsForLanguageId;
		this.filmsForLanguageId_1 = filmsForLanguageId_1;
		this.filmsForOriginalLanguageId_1 = filmsForOriginalLanguageId_1;
	}

	@Id
	@Column(name = "LANGUAGE_ID", unique = true, nullable = false)
	public byte getLanguageId() {
		return this.languageId;
	}

	public void setLanguageId(byte languageId) {
		this.languageId = languageId;
	}

	@Column(name = "NAME", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATE", nullable = false, length = 23)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByOriginalLanguageId")
	public Set<Film> getFilmsForOriginalLanguageId() {
		return this.filmsForOriginalLanguageId;
	}

	public void setFilmsForOriginalLanguageId(
			Set<Film> filmsForOriginalLanguageId) {
		this.filmsForOriginalLanguageId = filmsForOriginalLanguageId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByLanguageId")
	public Set<Film> getFilmsForLanguageId() {
		return this.filmsForLanguageId;
	}

	public void setFilmsForLanguageId(Set<Film> filmsForLanguageId) {
		this.filmsForLanguageId = filmsForLanguageId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByLanguageId")
	public Set<Film> getFilmsForLanguageId_1() {
		return this.filmsForLanguageId_1;
	}

	public void setFilmsForLanguageId_1(Set<Film> filmsForLanguageId_1) {
		this.filmsForLanguageId_1 = filmsForLanguageId_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByOriginalLanguageId")
	public Set<Film> getFilmsForOriginalLanguageId_1() {
		return this.filmsForOriginalLanguageId_1;
	}

	public void setFilmsForOriginalLanguageId_1(
			Set<Film> filmsForOriginalLanguageId_1) {
		this.filmsForOriginalLanguageId_1 = filmsForOriginalLanguageId_1;
	}

}
